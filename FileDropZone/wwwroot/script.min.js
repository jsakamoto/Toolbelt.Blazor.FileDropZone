export const initializeFileDropZone=n=>new t(n);const n="hover";class t{constructor(n){this._disposed=!1;this._dropZone=null;this._delay=-1;this._dropZone=n;this._handlers=[["dragenter",this.onDragHover.bind(this)],["dragover",this.onDragHover.bind(this)],["dragleave",this.onDragLeave.bind(this)],["drop",this.onDrop.bind(this)],["paste",this.onPaste.bind(this)]];this._handlers.forEach(t=>n.addEventListener(t[0],t[1]))}cancelDelay(){this._delay!==-1&&clearTimeout(this._delay);this._delay=-1}onDragHover(t){var i;t.preventDefault();this.cancelDelay();(i=this._dropZone)===null||i===void 0?void 0:i.classList.add(n)}onDragLeave(t){t.preventDefault();this.cancelDelay();this._delay=setTimeout(()=>{var t;this._delay=-1;(t=this._dropZone)===null||t===void 0?void 0:t.classList.remove(n)},10)}onDrop(t){var i;t.stopPropagation();t.preventDefault();this.cancelDelay();(i=this._dropZone)===null||i===void 0?void 0:i.classList.remove(n);this.dispatch(t.dataTransfer)}onPaste(n){this.dispatch(n.clipboardData)}dispatch(n){var t;if(n!==null&&this._disposed!==!0&&document.contains(this._dropZone)!==!1){const i=(t=this._dropZone)===null||t===void 0?void 0:t.querySelector("input[type=file]");if(i===null)throw new Error("");i.files=n.files;const r=new Event("change",{bubbles:!0});i.dispatchEvent(r)}}dispose(){this._disposed!==!0&&(this._dropZone!==null&&this._handlers.forEach(n=>this._dropZone.removeEventListener(n[0],n[1])),this._disposed=!0,this._dropZone=null)}}